name: 🚀 Deploy Campus Party Presentation

on:
  push:
    branches: [ enhanced-auto-docs-system, main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy-presentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Verify presentation files
        run: |
          echo "📂 Checking presentation directory..."
          ls -la presentation/
          echo "📊 File sizes:"
          du -h presentation/*
          echo "✅ Files verified"
        
      - name: Deploy to gh-pages
        run: |
          echo "🚀 Deploying Campus Party Brasil 2025 presentation..."
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create orphan gh-pages branch (clean slate)
          git checkout --orphan gh-pages
          
          # Remove all files except presentation
          git rm -rf --cached .
          
          # Copy presentation files to root
          cp presentation/* .
          
          # Clean up
          rm -rf src/ tests/ scripts/ config/ requirements.txt demo.py mcp_server.py
          rm -rf .github/ presentation/ 
          rm -f *.md *.py teste_*.py
          
          # Keep only presentation files
          echo "📁 Files to deploy:"
          ls -la
          
          # Add and commit
          git add .
          git commit -m "🎯 Deploy Campus Party Brasil 2025 - Reveal.js Presentation

          ✨ IA na Garantia da Qualidade de Software
          🎉 Campus Party Brasil 2025
          🚀 Deployed from: ${{ github.sha }}
          
          Generated by: GitHub Actions
          Timestamp: $(date)" || echo "No changes to commit"
          
          # Force push to gh-pages
          git push origin gh-pages --force
          
          echo "✅ Deployment complete!"
          echo "🌐 Presentation available at: https://lucasdoreac.github.io/ai-quality-assurance-cpbr2025/"